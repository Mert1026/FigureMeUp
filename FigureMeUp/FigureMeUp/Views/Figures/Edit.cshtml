@model FigureMeUp.Data.Models.View_models.FiguresViewModel
@{
    ViewData["Title"] = "Edit Figure";
}

<div class="row justify-content-center">
    <div class="col-lg-8">
        <div class="card shadow">
            <div class="card-header bg-warning text-dark">
                <h3 class="mb-0">
                    <i class="fas fa-edit me-2"></i>Edit Figure
                </h3>
            </div>
            <div class="card-body">
                <form asp-action="Edit" method="post">
                    <div asp-validation-summary="ModelOnly" class="text-danger mb-3"></div>
                    <input asp-for="Id" type="hidden" />

                    <div class="row">
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label asp-for="Name" class="form-label">
                                    <i class="fas fa-tag me-1"></i>Figure Name
                                </label>
                                <input asp-for="Name" class="form-control" placeholder="Enter figure name" maxlength="50" required />
                                <span asp-validation-for="Name" class="text-danger"></span>
                                <small class="form-text text-muted">Maximum 50 characters</small>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label asp-for="Rarity" class="form-label">
                                    <i class="fas fa-star me-1"></i>Rarity
                                </label>
                                <select asp-for="Rarity" class="form-select" required>
                                    <option value="">Select rarity...</option>
                                    <option value="Common">Common</option>
                                    <option value="Uncommon">Uncommon</option>
                                    <option value="Rare">Rare</option>
                                    <option value="Epic">Epic</option>
                                    <option value="Legendary">Legendary</option>
                                </select>
                                <span asp-validation-for="Rarity" class="text-danger"></span>
                            </div>
                        </div>
                    </div>

                    <div class="mb-3">
                        <label asp-for="Description" class="form-label">
                            <i class="fas fa-align-left me-1"></i>Description
                        </label>
                        <textarea asp-for="Description" class="form-control" rows="4" placeholder="Describe your figure..." maxlength="500" required></textarea>
                        <span asp-validation-for="Description" class="text-danger"></span>
                        <small class="form-text text-muted">Maximum 500 characters</small>
                    </div>

                    <div class="mb-3">
                        <label class="form-label">
                            <i class="fas fa-images me-1"></i>Image URLs
                        </label>
                        <div id="imageUrls">
                            @if (Model.ImageUrls != null && Model.ImageUrls.Any())
                            {
                                @for (int i = 0; i < Model.ImageUrls.Count; i++)
                                {
                                    <div class="input-group mb-2">
                                        <input type="url" name="ImageUrls" value="@Model.ImageUrls[i]" class="form-control" placeholder="Enter image URL" required />
                                        <button type="button" class="btn btn-outline-danger" onclick="removeImageUrl(this)" style="display: @(Model.ImageUrls.Count > 1 ? "block" : "none");">
                                            <i class="fas fa-times"></i>
                                        </button>
                                    </div>
                                }
                            }
                            else
                            {
                                <div class="input-group mb-2">
                                    <input type="url" name="ImageUrls" class="form-control" placeholder="Enter image URL" required />
                                    <button type="button" class="btn btn-outline-danger" onclick="removeImageUrl(this)" style="display: none;">
                                        <i class="fas fa-times"></i>
                                    </button>
                                </div>
                            }
                        </div>
                        <button type="button" class="btn btn-outline-primary btn-sm" onclick="addImageUrl()" id="addImageBtn">
                            <i class="fas fa-plus me-1"></i>Add Another Image
                        </button>
                        <small class="form-text text-muted">Maximum 5 images</small>
                    </div>

                    <div class="mb-3">
                        <label class="form-label">
                            <i class="fas fa-hashtag me-1"></i>Hashtags
                        </label>
                        <div id="hashtags">
                            @if (Model.Hashtags != null && Model.Hashtags.Any())
                            {
                                @for (int i = 0; i < Model.Hashtags.Count; i++)
                                {
                                    <div class="input-group mb-2">
                                        <input type="text" name="Hashtags" value="@Model.Hashtags[i]" class="form-control" placeholder="Enter hashtag (without #)" maxlength="15" pattern="[a-zA-Z0-9_]+" title="Only letters, numbers and underscores allowed" />
                                        <button type="button" class="btn btn-outline-danger" onclick="removeHashtag(this)" style="display: @(Model.Hashtags.Count > 1 ? "block" : "none");">
                                            <i class="fas fa-times"></i>
                                        </button>
                                    </div>
                                }
                            }
                            else
                            {
                                <div class="input-group mb-2">
                                    <input type="text" name="Hashtags" class="form-control" placeholder="Enter hashtag (without #)" maxlength="15" pattern="[a-zA-Z0-9_]+" title="Only letters, numbers and underscores allowed" />
                                    <button type="button" class="btn btn-outline-danger" onclick="removeHashtag(this)" style="display: none;">
                                        <i class="fas fa-times"></i>
                                    </button>
                                </div>
                            }
                        </div>
                        <button type="button" class="btn btn-outline-primary btn-sm" onclick="addHashtag()" id="addHashtagBtn">
                            <i class="fas fa-plus me-1"></i>Add Another Hashtag
                        </button>
                        <small class="form-text text-muted">Maximum 5 hashtags, 15 characters each</small>
                    </div>

                    <div class="alert alert-info">
                        <i class="fas fa-info-circle me-2"></i>
                        <strong>Owner:</strong> @Model.OwnerName
                    </div>

                    <div class="d-flex justify-content-end gap-2">
                        <a asp-action="Details" asp-route-id="@Model.Id" class="btn btn-secondary">
                            <i class="fas fa-times me-1"></i>Cancel
                        </a>
                        <button type="submit" class="btn btn-warning">
                            <i class="fas fa-save me-1"></i>Update Figure
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        function addImageUrl() {
            const container = document.getElementById('imageUrls');
            const currentCount = container.querySelectorAll('.input-group').length;

            if (currentCount >= 5) {
                alert('Maximum 5 images allowed');
                return;
            }

            const div = document.createElement('div');
            div.className = 'input-group mb-2';
            div.innerHTML = `
                <input type="url" name="ImageUrls" class="form-control" placeholder="Enter image URL" required />
                <button type="button" class="btn btn-outline-danger" onclick="removeImageUrl(this)">
                    <i class="fas fa-times"></i>
                </button>
            `;
            container.appendChild(div);
            updateRemoveButtons('imageUrls');
            updateAddButtons();
        }

        function removeImageUrl(button) {
            button.parentElement.remove();
            updateRemoveButtons('imageUrls');
            updateAddButtons();
        }

        function addHashtag() {
            const container = document.getElementById('hashtags');
            const currentCount = container.querySelectorAll('.input-group').length;

            if (currentCount >= 5) {
                alert('Maximum 5 hashtags allowed');
                return;
            }

            const div = document.createElement('div');
            div.className = 'input-group mb-2';
            div.innerHTML = `
                <input type="text" name="Hashtags" class="form-control" placeholder="Enter hashtag (without #)" maxlength="15" pattern="[a-zA-Z0-9_]+" title="Only letters, numbers and underscores allowed" />
                <button type="button" class="btn btn-outline-danger" onclick="removeHashtag(this)">
                    <i class="fas fa-times"></i>
                </button>
            `;
            container.appendChild(div);
            updateRemoveButtons('hashtags');
            updateAddButtons();
        }

        function removeHashtag(button) {
            button.parentElement.remove();
            updateRemoveButtons('hashtags');
            updateAddButtons();
        }

        function updateRemoveButtons(containerId) {
            const container = document.getElementById(containerId);
            const buttons = container.querySelectorAll('.btn-outline-danger');
            buttons.forEach((button, index) => {
                button.style.display = buttons.length > 1 ? 'block' : 'none';
            });
        }

        function updateAddButtons() {
            const imageContainer = document.getElementById('imageUrls');
            const hashtagContainer = document.getElementById('hashtags');
            const imageCount = imageContainer.querySelectorAll('.input-group').length;
            const hashtagCount = hashtagContainer.querySelectorAll('.input-group').length;

            document.getElementById('addImageBtn').disabled = imageCount >= 5;
            document.getElementById('addHashtagBtn').disabled = hashtagCount >= 5;
        }

        document.addEventListener('DOMContentLoaded', function() {
            updateRemoveButtons('imageUrls');
            updateRemoveButtons('hashtags');
            updateAddButtons();
        });
    </script>
}